version: '3.3'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELK_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash-oss:${ELK_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELK_VERSION}
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD", "curl", "-f", "kibana:5601"]
      interval: 30s
      timeout: 10s
      retries: 5

  metricbeat:
    # this needs to be root for you to monitor host docker socket
    user: root
    image: docker.elastic.co/beats/metricbeat:${ELK_VERSION}
    volumes: 
      - ./metricbeat/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml
      - /var/run/docker.sock:/var/run/docker.sock
      - /sys/fs/cgroup:/hostfs/sys/fs/cgroup
      - /proc:/hostfs/proc
      - /:/hostfs
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    networks:
      - elk
    restart: on-failure
    depends_on:
      - logstash
      - kibana

  filebeat:
    user: root
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    networks:
      - elk
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - filebeat_data:/usr/share/filebeat/data
      - /var/lib/docker/containers:/var/lib/docker/containers
      - /var/run/docker.sock:/var/run/docker.sock
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
    restart: on-failure
    depends_on: 
      - logstash
      - kibana
    
volumes:
  filebeat_data:

networks:
  elk:
